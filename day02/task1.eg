# Advent of Code (AoC) - day 2, task 1

import "prelude.eg"

using System, OS, List, String (to_chars)

def input =
    let L = read_line stdin in if eof stdin then {} else {L | input}

def parse = 
    do Regex::matches (Regex::compile "[0-9]+")  |> map to_int

def safe =
    [ XX ->
    [ XX -> and (all [X -> X <= 3] (map abs0 XX)) 
            (or (all [X -> X < 0] XX) (all [X -> X > 0] XX)) ]
            (zip XX (tail XX) |> map (uncurry (-))) ]

def main =
    input |> map parse |> map safe |> filter id |> length
