#!/usr/local/bin/egel

import "prelude.eg"

using System, List, OS, S = String

def loc =
    [D -> OS::exec (format "./mk-loc.eg {}" D)]

def line =
    [(D,(X,Y,Z)) -> format "    day {:2} - {:>4} {:>5} {:>4}\n" D X Y Z]

def totals =
    [(X,Y) -> format "    totals - {:>4} {:>5}" X Y]

def main =
    [{} -> map [D -> (D, loc D)] (from_to 1 24) 
           |> map (proj_update 1 (Regex::matches (Regex::compile "[0-9]+")))
           |> map (proj_update 1 [{X,Y,Z} -> (to_int X,to_int Y,to_int Z)])
           |> [LL -> map line LL ++ {totals (foldr add (0,0) (map ([(X,Y,_) -> (X,Y)] . snd) LL))}]
           |> reduce (+) |> [X -> print X]
    |_ -> printf "usage: mk-locs.eg\n"] (tail (tail args))
