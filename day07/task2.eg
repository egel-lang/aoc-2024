# Advent of Code (AoC) - day 7, task 2

import "prelude.eg"

using System, OS, List

def parse = 
    do Regex::matches (Regex::compile "[0-9]+") |> map to_int

def conc =
    [X Y -> to_int (to_text X + to_text Y)]

def solutions =
    foldl [{} X -> {X} |XX X -> map ((*) X) XX ++ map ((+) X) XX ++ map (flip conc X) XX] {}

def main =
    read_lines stdin |> map parse |> map [XX -> (head XX, solutions (tail XX))] 
    |> filter [(X,XX) -> (filter ((==) X) XX) /= {}] |> map fst |> sum
