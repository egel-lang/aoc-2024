# Advent of Code (AoC) - day 1, task 2

import "prelude.eg"
using System, OS, List

def input =
    let L = read_line stdin in if eof stdin then {} else {L | input}

def parse = 
    let D = Regex::compile "[0-9]+" in do Regex::matches D |> map to_int

def order = 
    do transpose |> map sort

def tally =
    do map [D -> Dict::count D] |> reduce Dict::inner_join |> Dict::to_list

def main =
    input |> map parse |> order |> tally |> map [(X,(Y,Z)) -> X*Y*Z] |> sum
